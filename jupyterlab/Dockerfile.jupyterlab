FROM archlinux/archlinux:base AS system

ARG ARG_DATE_ISO
ENV DATE_ISO=$ARG_DATE_ISO
COPY "./${DATE_ISO}" "/${DATE_ISO}"

RUN echo "Server=https://archive.archlinux.org/repos/$(date -d "${DATE_ISO} -1 days" +'%Y/%m/%d')/\$repo/os/\$arch" > /etc/pacman.d/mirrorlist \
    && pacman -Sy --noconfirm --needed pacman \
    && pacman -Syu --noconfirm \
    && pacman -S --noconfirm - < "/${DATE_ISO}/packages.in" \
    && pacman -Qe > "/${DATE_ISO}/packages.out" \
    && pacman -Q   > "/${DATE_ISO}/packages-all.out" \
    && pacman -Scc --noconfirm \
    && rm -rf /tmp/* /var/tmp/* /usr/share/man/* /usr/share/doc/* /usr/share/info/*
CMD ["bash", "-c", "exec bash"]

FROM system AS venv

RUN python -m venv /opt/venv \
    && source /opt/venv/bin/activate \
    && python -m pip install --no-cache-dir pip-tools \
    && pip-compile --output-file "/${DATE_ISO}/requirements.out" "/${DATE_ISO}/requirements.in" \
    && python -m pip install --no-cache-dir -r "/${DATE_ISO}/requirements.out" \
    && rm -rf /tmp/*
ENV VIRTUAL_ENV_DISABLE_PROMPT=true
CMD ["bash", "-c", "source /opt/venv/bin/activate && exec bash"]

FROM venv AS code-server

RUN git clone https://aur.archlinux.org/code-server.git /code-server \
    && git config --global --add safe.directory /code-server \
    && cd /code-server \
    && git checkout $(git rev-list -1 --before="${DATE_ISO}" HEAD) \
    && chown -R nobody:nobody /code-server \
    && runuser -u nobody makepkg -- --nocheck --nodeps \
    && pacman -U code-server-*.pkg.tar.zst --noconfirm \
    && pacman -Scc --noconfirm \
    && cd / && rm -rf "/code-server" \
    && rm -rf /tmp/* /var/tmp/*

# note on codelldb: x64-build not available on open-vsx.org, using github instead (see extensions.txt)
RUN wget --no-verbose --input-file "/${DATE_ISO}/extensions.in" \
    && for extension in /*.vsix; do code-server --extensions-dir "/usr/lib/code-server/lib/vscode/extensions/" --install-extension $extension; done \
    && rm -rf /*.vsix \
    && code-server --list-extensions --extensions-dir "/usr/lib/code-server/lib/vscode/extensions/" > "/${DATE_ISO}/extensions-all.out" 

COPY etc/skel/.local/share/code-server/User/settings.json /etc/skel/.local/share/code-server/User/settings.json
ENV CS_DISABLE_GETTING_STARTED_OVERRIDE=true
ENTRYPOINT ["bash", "-c", "source /opt/venv/bin/activate && code-server --bind-addr 0.0.0.0:8080 --auth none /"]

FROM code-server AS jupyter

COPY entrypoint.sh /entrypoint.sh
ENTRYPOINT ["/entrypoint.sh"]
